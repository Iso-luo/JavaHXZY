接口:
	接口当中不仅仅有抽象方法,还可以有属性
	并且这个量(属性) 必须都是常量
	-------
					修饰
	成员属性      (默认)public static final	(不可修改)
    抽象方法	  (默认)public abstract 	(不可修改)	
--------------------------------
抽象类
	成员属性     普通的变量		(可以根据需求自己添加final private static等修饰符)
	抽象方法     (默认)public(可以不写,不可以修改为default包级,可以是protected子级访问)abstract(必须要写 因为抽象类里可以包含抽象方法和非抽象方法)
---------------------------------
继承抽象类的类
	成员属性     普通的变量？？？？？？？？？？？？？？？？？？？？？？
	方法     	(默认)public(可以不写 但如果抽象的父类该方法用public修饰了 子类也必须加public
							 不可以修改为default包级,
							可以是protected子级访问)abstract(可以不写 只要方法名称和父类中该抽象方法的名称一致，会直接默认为abstract)
							当抽象类中的方法前无权限修饰时，其子类中继承的方法可以用public或protected来修饰，不报错
				【注意】子类方法的访问权限>=父类方法的访问权限
---------------------------------
普通类
	成员属性     普通的变量
	方法     	(默认)default包级权限【注意】只有普通类的方法是默认default 那普通类的子类呢？？？？？？？
---------------------------------		
关键字：
	final	
		fianl 变量      ---------->常量		
		final method    ---------->不能覆盖:如果一个方法被final修饰，则该方法不能被重写	
		final class     ---------->不能被继承:如果一个类被final修饰，则该类为最终类，不能再被继承	
	static	
		--->静态		
			//  	无法 从静态上下文中		引用 非静态方法 show()	
			//理解：无法 从已经存在的上下文 引用 不存在的 方法、属性						
设计一个类：

			
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	

